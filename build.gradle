buildscript {
    //在build.gradle里引用
    apply from: "${rootDir}/repositories.gradle"
    dependencies {
        classpath("io.spring.javaformat:spring-javaformat-gradle-plugin:0.0.41")
    }
}

plugins {
    id 'java'
}

subprojects {
    // 指定需要的插件
    // 指定语言
    apply plugin: 'java-library'
    //指定编辑器
    apply plugin: 'idea'
    // 指定代码格式化插件
    apply plugin: "io.spring.javaformat"
    // maven 发布插件
    apply plugin: 'maven-publish'
    apply plugin: 'signing'

    group 'org.gitee.ztkyn'
    version '1.0-SNAPSHOT'

    //指定JDK版本
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17

    //指定编码格式
    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

    //在build.gradle里引用
    apply from: "${rootDir}/repositories.gradle"

    // 配置全局依赖版本信息
    ext {
        ttlVersion = '2.14.2'
        okhttpsVersion = '4.0.1'
        hutoolVersion = '5.8.25'
        springBootVersion = '3.1.1'
        redissonVersion = '3.22.1'
        springdocVersion = '2.3.0'
        knife4jVersion = '4.5.0'
        cosidVersion = '2.1.1'
        zookeeperVersion = '3.8.1'
        jettyVersion = '11.0.15'
        metricsVersion = '4.2.19'
        commonsCliVersion = '1.5.0'
        commonsIOVersion = '2.13.0'

        guavaVersion = '32.0.0-jre'
        mapstructVersion = '1.5.3.Final'
        lombokVersion = '1.18.26'
        projectName = project.name
    }

    //配置子模块依赖
    dependencies {
        implementation(platform("org.springframework.boot:spring-boot-dependencies:${springBootVersion}"))

        // MapStruct是一个Java注释处理器，用于生成类型安全的bean映射类
        implementation "org.mapstruct:mapstruct:${mapstructVersion}"
        annotationProcessor("org.projectlombok:lombok-mapstruct-binding:0.2.0")
        annotationProcessor("org.mapstruct:mapstruct-processor:${mapstructVersion}")
        compileOnly("org.projectlombok:lombok")
        annotationProcessor("org.projectlombok:lombok:${lombokVersion}")

        testAnnotationProcessor("org.mapstruct:mapstruct-processor:${mapstructVersion}")
        testCompileOnly("org.projectlombok:lombok")
        testAnnotationProcessor("org.projectlombok:lombok:${lombokVersion}")

        testImplementation("org.junit.jupiter:junit-jupiter-api")
        testImplementation("org.junit.jupiter:junit-jupiter-params")
        testImplementation("org.junit.platform:junit-platform-suite-api")
        testImplementation("ch.qos.logback:logback-classic")
        testImplementation("io.projectreactor:reactor-test")

        testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
        testRuntimeOnly("org.junit.platform:junit-platform-launcher")
        testRuntimeOnly("org.junit.platform:junit-platform-suite-engine")

    }

    // 以下四句代码 是用来解决任务直接的依赖关系
    checkFormatMain.dependsOn formatMain
    checkFormatTest.dependsOn formatTest
    compileJava.dependsOn formatMain
    compileTestJava.dependsOn formatTest

    test {
        useJUnitPlatform()
    }

}


